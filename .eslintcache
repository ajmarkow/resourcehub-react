[{"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\index.js":"1","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\App.js":"2","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\reportWebVitals.js":"3","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\Routes.js":"4","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Home.js":"5","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\NotFound.js":"6","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\config.js":"7","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Login.js":"8","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\contextLib.js":"9","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\components\\LoaderButton.js":"10","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\errorLib.js":"11","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\hooksLib.js":"12","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Signup.js":"13","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\NewPost.js":"14","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\awsLib.js":"15","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Posts.js":"16","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\LandingPage.js":"17","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Donate.js":"18","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\components\\BillingForm.js":"19"},{"size":1230,"mtime":1612814656478,"results":"20","hashOfConfig":"21"},{"size":4178,"mtime":1612892448042,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":1077,"mtime":1612821135490,"results":"24","hashOfConfig":"21"},{"size":6245,"mtime":1612894803443,"results":"25","hashOfConfig":"21"},{"size":240,"mtime":1612304505887,"results":"26","hashOfConfig":"21"},{"size":656,"mtime":1612823947367,"results":"27","hashOfConfig":"21"},{"size":1985,"mtime":1612570511382,"results":"28","hashOfConfig":"21"},{"size":174,"mtime":1612373984174,"results":"29","hashOfConfig":"21"},{"size":513,"mtime":1612387447094,"results":"30","hashOfConfig":"21"},{"size":201,"mtime":1612387695590,"results":"31","hashOfConfig":"21"},{"size":305,"mtime":1612892664710,"results":"32","hashOfConfig":"21"},{"size":3902,"mtime":1612388939367,"results":"33","hashOfConfig":"21"},{"size":6071,"mtime":1612812595658,"results":"34","hashOfConfig":"21"},{"size":255,"mtime":1612466156835,"results":"35","hashOfConfig":"21"},{"size":8215,"mtime":1612563990082,"results":"36","hashOfConfig":"21"},{"size":4927,"mtime":1612894812357,"results":"37","hashOfConfig":"21"},{"size":1530,"mtime":1612824431737,"results":"38","hashOfConfig":"21"},{"size":2464,"mtime":1612830092273,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"2c9557",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\index.js",[],["80","81"],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\App.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\reportWebVitals.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\Routes.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Home.js",["82"],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\NotFound.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\config.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Login.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\contextLib.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\components\\LoaderButton.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\errorLib.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\hooksLib.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Signup.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\NewPost.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\awsLib.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Posts.js",["83"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport config from \"../config\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { s3Upload } from \"../libs/awsLib\";\r\n\r\nexport default function Posts() {\r\n  const file = useRef(null);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [post, setPost] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  \r\n  useEffect(() => {\r\n    function loadPost() {\r\n      return API.get(\"posts\", `/posts/${id}`);\r\n    }\r\n\r\n    async function onLoad() {\r\n      try {\r\n        const post = await loadPost();\r\n        console.log(post);\r\n        const {\r\n          attachment,\r\n        } = post;\r\n\r\n        if (attachment) {\r\n          post.attachmentURL = await Storage.vault.get(attachment);\r\n        }\r\n        \r\n        setPost(post);\r\n      } catch (e) {\r\n        onError(e);\r\n      }\r\n    }\r\n    console.log(post);\r\n    onLoad();\r\n  }, [id]);\r\n\r\n\r\n  function validateForm() {\r\n    return post.length > 0;\r\n  }\r\n\r\n  function savePost(post) {\r\n    return API.put(\"posts\", `/posts/${id}`, {\r\n      body: post\r\n    });\r\n  }\r\n  function formatFilename(str) {\r\n    if (str != null) {\r\n      return str.replace(/^\\w+-/, \"\");\r\n  }\r\n  }\r\n\r\n  function handleFileChange(event) {\r\n    file.current = event.target.files[0];\r\n  }\r\n\r\n  async function handleFormSubmit(data, event) {\r\n    let attachment;\r\n    event.preventDefault();\r\n\r\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${\r\n          config.MAX_ATTACHMENT_SIZE / 1000000\r\n        } MB.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      if (file.current) {\r\n        attachment = await s3Upload(file.current);\r\n      }\r\n      await savePost({\r\n        postBlurb: data.postBlurb,\r\n        postLink: data.postLink,\r\n        postLanguage: data.postLanguage,\r\n        postKeywords: data.postKeywords,\r\n        postRating: data.postRating,\r\n        attachment: attachment || post.attachment,\r\n      });\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  function deletePost() {\r\n    return API.del(\"posts\", `/posts/${id}`);\r\n  }\r\n\r\n  async function handleDelete(event) {\r\n    event.preventDefault();\r\n\r\n    const confirmed = window.confirm(\r\n      \"Are you sure you want to delete this note?\"\r\n    );\r\n\r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n\r\n    setIsDeleting(true);\r\n\r\n    try {\r\n      await deletePost();\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"posts\">\r\n        (\r\n          <div>\r\n            <Card bg=\"dark\" style={{ width: \"80%\" }} className=\"p-5 NewPost\">\r\n              <div className=\"NewPost\">\r\n                <Form onSubmit={handleSubmit(handleFormSubmit)}>\r\n                  <Form.Group controlId=\"PostBlurb\">\r\n                    <Form.Label className=\"labels\">\r\n                      Describe the Content\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                    as=\"textarea\"\r\n                    onChange={(e) => setPost(e.target.value)}\r\n                    ref={register({ required: true })}\r\n                    name=\"postBlurb\"\r\n                    value={ post.postBlurb}\r\n                    />\r\n                    {errors.blurb && errors.blurb.type === \"required\" && (\r\n                      <span className=\"noto\" role=\"alert\">\r\n                        This is required\r\n                      </span>\r\n                    )}\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"PostLink\">\r\n                    <Form.Label className=\"labels\">Post Link</Form.Label>\r\n                    <Form.Control\r\n                      value={post.postLink}\r\n                      type=\"text\"\r\n                      onChange={(e) => setPost(e.target.value)}\r\n                      ref={register({ required: true })}\r\n                      name=\"postLink\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"postLanguage\">\r\n                    <Form.Label className=\"labels\">\r\n                      What programming language?\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      value={post.postLanguage}\r\n                      type=\"text\"\r\n                      onChange={(e) => setPost(e.target.value)}\r\n                      ref={register({ required: true })}\r\n                      name=\"postLanguage\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"postKeywords\">\r\n                    <Form.Label className=\"labels\">Any Keywords?</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      multiple\r\n                      name=\"postKeywords\"\r\n                      size=\"3\"\r\n                      ref={register}\r\n                      value={post.postKeywords}\r\n                      onChange={(e) => setPost(e.target.value)}\r\n                    >\r\n                      <option value=\"Tutorial\">Tutorial</option>\r\n                      <option value=\"Blog Post\">Blog Post</option>\r\n                      <option value=\"Youtube Video\">Youtube Video</option>\r\n                      <option value=\"Podcast\">Podcast</option>\r\n                      <option value=\"Documentation\">Documentation</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"postRating\">\r\n                    <Form.Label className=\"labels\">\r\n                      Rate it, 1 to 5 Stars.\r\n                    </Form.Label>\r\n                    <br></br>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      id=\"rating\"\r\n                      name=\"postRating\"\r\n                      size=\"3\"\r\n                      ref={register}\r\n                      value={post.postRating}\r\n                      onChange={(e) => setPost(e.target.value)}\r\n                    >\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"file\">\r\n                    <Form.Label>Attachment</Form.Label>\r\n                    {post.attachment && (\r\n                      <p>\r\n                        <a\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          href={post.attachmentURL}\r\n                        >\r\n                          {formatFilename(post.attachment)}\r\n                        </a>\r\n                      </p>\r\n                    )}\r\n                    <Form.Control onChange={handleFileChange} type=\"file\" />\r\n                  </Form.Group>\r\n                  <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    size=\"lg\"\r\n                    variant=\"primary\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                  >\r\n                    Share it\r\n                  </LoaderButton>\r\n                </Form>\r\n              </div>\r\n            </Card>\r\n            <LoaderButton\r\n              size=\"lg\"\r\n              variant=\"danger\"\r\n              onClick={handleDelete}\r\n              isLoading={isDeleting}\r\n            >\r\n              Delete\r\n            </LoaderButton>\r\n          </div>\r\n        )\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\LandingPage.js",["84"],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Donate.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\components\\BillingForm.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":37,"column":20,"nodeType":"91","messageId":"92","endLine":37,"endColumn":31},{"ruleId":"93","severity":1,"message":"94","line":46,"column":6,"nodeType":"95","endLine":46,"endColumn":10,"suggestions":"96"},{"ruleId":"89","severity":1,"message":"97","line":35,"column":11,"nodeType":"91","messageId":"92","endLine":35,"endColumn":26},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'setAllPosts' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'post'. Either include it or remove the dependency array.","ArrayExpression",["100"],"'isAuthenticated' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [id, post]",{"range":"103","text":"104"},[1337,1341],"[id, post]"]