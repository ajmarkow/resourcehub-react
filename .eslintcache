[{"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\index.js":"1","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\App.js":"2","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\reportWebVitals.js":"3","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\Routes.js":"4","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Home.js":"5","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\NotFound.js":"6","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\config.js":"7","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Login.js":"8","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\contextLib.js":"9","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\components\\LoaderButton.js":"10","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\errorLib.js":"11","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\hooksLib.js":"12","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Signup.js":"13","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\NewPost.js":"14","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\awsLib.js":"15","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Posts.js":"16"},{"size":1230,"mtime":1612473021049,"results":"17","hashOfConfig":"18"},{"size":2850,"mtime":1612397720902,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":832,"mtime":1612475126993,"results":"21","hashOfConfig":"18"},{"size":3035,"mtime":1612485060930,"results":"22","hashOfConfig":"18"},{"size":240,"mtime":1612304505887,"results":"23","hashOfConfig":"18"},{"size":525,"mtime":1612397251780,"results":"24","hashOfConfig":"18"},{"size":1981,"mtime":1612388278048,"results":"25","hashOfConfig":"18"},{"size":174,"mtime":1612373984174,"results":"26","hashOfConfig":"18"},{"size":513,"mtime":1612387447094,"results":"27","hashOfConfig":"18"},{"size":201,"mtime":1612387695590,"results":"28","hashOfConfig":"18"},{"size":583,"mtime":1612546236367,"results":"29","hashOfConfig":"18"},{"size":3902,"mtime":1612388939367,"results":"30","hashOfConfig":"18"},{"size":5451,"mtime":1612547650495,"results":"31","hashOfConfig":"18"},{"size":255,"mtime":1612466156835,"results":"32","hashOfConfig":"18"},{"size":8192,"mtime":1612548481031,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"2c9557",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\index.js",[],["68","69"],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\App.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\reportWebVitals.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\Routes.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Home.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\NotFound.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\config.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Login.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\contextLib.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\components\\LoaderButton.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\errorLib.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\hooksLib.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Signup.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\NewPost.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\awsLib.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Posts.js",["70","71","72"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport config from \"../config\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { s3Upload } from \"../libs/awsLib\";\r\nimport { useContentFields} from \"../libs/hooksLib\";\r\n\r\nexport default function Posts() {\r\n  const file = useRef(null);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [post, setPost] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const [content, setContent] = useContentFields({\r\n    postBlurb: \"\",\r\n    postLink: \"\",\r\n    postLanguage: \"\",\r\n    postKeywords: [],\r\n    postRating: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    function loadPost() {\r\n      return API.get(\"posts\", `/posts/${id}`);\r\n    }\r\n\r\n    async function onLoad() {\r\n      try {\r\n        const post = await loadPost();\r\n        console.log(post);\r\n        const {\r\n          attachment,\r\n        } = post;\r\n\r\n        if (attachment) {\r\n          post.attachmentURL = await Storage.vault.get(attachment);\r\n        }\r\n        \r\n        setPost(post);\r\n      } catch (e) {\r\n        onError(e);\r\n      }\r\n    }\r\n    console.log(post);\r\n    onLoad();\r\n  }, [id]);\r\n\r\n\r\n      function validateForm() {\r\n        return post.length > 0;\r\n      }\r\n\r\n  function savePost(post) {\r\n    return API.put(\"posts\", `/posts/${id}`, {\r\n      body: post\r\n    });\r\n  }\r\n  function formatFilename(str) {\r\n    return str.replace(/^\\w+-/, \"\");\r\n  }\r\n\r\n  function handleFileChange(event) {\r\n    file.current = event.target.files[0];\r\n  }\r\n\r\n  async function handleFormSubmit(data, event) {\r\n    let attachment;\r\n    event.preventDefault();\r\n\r\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${\r\n          config.MAX_ATTACHMENT_SIZE / 1000000\r\n        } MB.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      if (file.current) {\r\n        attachment = await s3Upload(file.current);\r\n      }\r\n      await savePost({\r\n        postBlurb: data.postBlurb,\r\n        postLink: data.postLink,\r\n        postLanguage: data.postLanguage,\r\n        postKeywords: data.postKeywords,\r\n        postRating: data.postRating,\r\n        attachment: attachment || post.attachment,\r\n      });\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function handleDelete(event) {\r\n    event.preventDefault();\r\n\r\n    const confirmed = window.confirm(\r\n      \"Are you sure you want to delete this note?\"\r\n    );\r\n\r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n\r\n    setIsDeleting(true);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"posts\">\r\n        (\r\n          <div>\r\n            <Card bg=\"dark\" style={{ width: \"80%\" }} className=\"p-5 NewPost\">\r\n              <div className=\"NewPost\">\r\n                <Form onSubmit={handleSubmit(handleFormSubmit)}>\r\n                  <Form.Group controlId=\"PostBlurb\">\r\n                    <Form.Label className=\"labels\">\r\n                      Describe the Content\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                    as=\"textarea\"\r\n                    onChange={(e) => setPost(e.target.value)}\r\n                    ref={register({ required: true })}\r\n                    name=\"postBlurb\"\r\n                    value={ post.postBlurb}\r\n                    />\r\n                    {errors.blurb && errors.blurb.type === \"required\" && (\r\n                      <span className=\"noto\" role=\"alert\">\r\n                        This is required\r\n                      </span>\r\n                    )}\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"PostLink\">\r\n                    <Form.Label className=\"labels\">Post Link</Form.Label>\r\n                    <Form.Control\r\n                      value={post.postLink}\r\n                      type=\"text\"\r\n                      onChange={(e) => setPost(e.target.value)}\r\n                      ref={register({ required: true })}\r\n                      name=\"postLink\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"postLanguage\">\r\n                    <Form.Label className=\"labels\">\r\n                      What programming language?\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      value={post.postLanguage}\r\n                      type=\"text\"\r\n                      onChange={(e) => setPost(e.target.value)}\r\n                      ref={register({ required: true })}\r\n                      name=\"postLanguage\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"postKeywords\">\r\n                    <Form.Label className=\"labels\">Any Keywords?</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      multiple\r\n                      name=\"postKeywords\"\r\n                      size=\"3\"\r\n                      ref={register}\r\n                      value={post.postKeywords}\r\n                      onChange={(e) => setPost(e.target.value)}\r\n                    >\r\n                      <option value=\"Tutorial\">Tutorial</option>\r\n                      <option value=\"Blog Post\">Blog Post</option>\r\n                      <option value=\"Youtube Video\">Youtube Video</option>\r\n                      <option value=\"Podcast\">Podcast</option>\r\n                      <option value=\"Documentation\">Documentation</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"postRating\">\r\n                    <Form.Label className=\"labels\">\r\n                      Rate it, 1 to 5 Stars.\r\n                    </Form.Label>\r\n                    <br></br>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      id=\"rating\"\r\n                      name=\"postRating\"\r\n                      size=\"3\"\r\n                      ref={register}\r\n                      value={post.postRating}\r\n                      onChange={(e) => setPost(e.target.value)}\r\n                    >\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"file\">\r\n                    <Form.Label>Attachment</Form.Label>\r\n                    {post.attachment && (\r\n                      <p>\r\n                        <a\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          href={post.attachmentURL}\r\n                        >\r\n                          {formatFilename(post.attachment)}\r\n                        </a>\r\n                      </p>\r\n                    )}\r\n                    <Form.Control onChange={handleFileChange} type=\"file\" />\r\n                  </Form.Group>\r\n                  <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    size=\"lg\"\r\n                    variant=\"primary\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                  >\r\n                    Share it\r\n                  </LoaderButton>\r\n                </Form>\r\n              </div>\r\n            </Card>\r\n            <LoaderButton\r\n              size=\"lg\"\r\n              variant=\"danger\"\r\n              onClick={handleDelete}\r\n              isLoading={isDeleting}\r\n            >\r\n              Delete\r\n            </LoaderButton>\r\n          </div>\r\n        )\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":22,"column":10,"nodeType":"79","messageId":"80","endLine":22,"endColumn":17},{"ruleId":"77","severity":1,"message":"81","line":22,"column":19,"nodeType":"79","messageId":"80","endLine":22,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":54,"column":6,"nodeType":"84","endLine":54,"endColumn":10,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'content' is assigned a value but never used.","Identifier","unusedVar","'setContent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'post'. Either include it or remove the dependency array.","ArrayExpression",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [id, post]",{"range":"91","text":"92"},[1553,1557],"[id, post]"]