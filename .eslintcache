[{"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\index.js":"1","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\App.js":"2","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\reportWebVitals.js":"3","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\Routes.js":"4","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Home.js":"5","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\NotFound.js":"6","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\config.js":"7","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Login.js":"8","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\contextLib.js":"9","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\components\\LoaderButton.js":"10","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\errorLib.js":"11","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\hooksLib.js":"12","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Signup.js":"13","C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\NewPost.js":"14"},{"size":1234,"mtime":1612379121522,"results":"15","hashOfConfig":"16"},{"size":2850,"mtime":1612397720902,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":717,"mtime":1612398214315,"results":"19","hashOfConfig":"16"},{"size":333,"mtime":1612395140247,"results":"20","hashOfConfig":"16"},{"size":240,"mtime":1612304505887,"results":"21","hashOfConfig":"16"},{"size":525,"mtime":1612397251780,"results":"22","hashOfConfig":"16"},{"size":1981,"mtime":1612388278048,"results":"23","hashOfConfig":"16"},{"size":174,"mtime":1612373984174,"results":"24","hashOfConfig":"16"},{"size":513,"mtime":1612387447094,"results":"25","hashOfConfig":"16"},{"size":201,"mtime":1612387695590,"results":"26","hashOfConfig":"16"},{"size":583,"mtime":1612395689458,"results":"27","hashOfConfig":"16"},{"size":3902,"mtime":1612388939367,"results":"28","hashOfConfig":"16"},{"size":5043,"mtime":1612398876283,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2c9557",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\index.js",[],["60","61"],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\App.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\reportWebVitals.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\Routes.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Home.js",["62"],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\NotFound.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\config.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Login.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\contextLib.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\components\\LoaderButton.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\errorLib.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\libs\\hooksLib.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\Signup.js",[],"C:\\Users\\alexa\\Documents\\resource_hub\\resourcehub-client\\src\\containers\\NewPost.js",["63","64","65","66","67","68","69"],"import React, { useRef, useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport config from \"../config\";\r\nimport \"./NewPost.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { API } from \"aws-amplify\";\r\n\r\nconst contentFilters = [\"beginner\", \"intermediate\", \"advanced\"];\r\n\r\nexport default function NewPost() {\r\n  const file = useRef(null);\r\n  const history = useHistory();\r\n  const [content, setContent] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [starRating, setStarRating] = useState(1);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  // const handleSettingContent = (data) => console.log(data);\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  function validateForm() {\r\n    return content.length > 0;\r\n  }\r\n\r\n  function handleFileChange(event) {\r\n    file.current = event.target.files[0];\r\n  }\r\n\r\n  function handleSettingContent(event) {\r\n    setContent([...content, event.target.value]);\r\n  }\r\n\r\n  function onStarClick(nextValue, prevValue, name) {\r\n    this.setState({ rating: nextValue });\r\n  }\r\n\r\n  // async function handleSubmit(event) {\r\n  //   event.preventDefault();\r\n\r\n  //   if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\r\n  //     alert(\r\n  //       `Please pick a file smaller than ${\r\n  //         config.MAX_ATTACHMENT_SIZE / 1000000\r\n  //       } MB.`\r\n  //     );\r\n  //     return;\r\n  //   }\r\n\r\n  //   setIsLoading(true);\r\n  // }\r\n\r\n  return (\r\n    <Card bg=\"dark\" style={{ width: \"80%\" }} className=\"p-5 NewPost\">\r\n      <div classname=\"NewPost\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Form.Group controlId=\"PostBlurb\">\r\n            <Form.Label className=\"labels\">Describe the Content</Form.Label>\r\n            <Form.Control\r\n              // value={content}\r\n              as=\"textarea\"\r\n              onChange={(e) => e.target.value}\r\n              ref={register({ required: true })}\r\n              name=\"blurb\"\r\n            />\r\n            {errors.blurb && errors.blurb.type === \"required\" && (\r\n              <span className=\"noto\" role=\"alert\">\r\n                This is required\r\n              </span>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"PostLink\">\r\n            <Form.Label className=\"labels\">Post Link</Form.Label>\r\n            <Form.Control\r\n              // value={content}\r\n              type=\"text\"\r\n              onChange={handleSettingContent}\r\n              ref={register({ required: true })}\r\n              name=\"link\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"PostLanguage\">\r\n            <Form.Label className=\"labels\">\r\n              What programming language?\r\n            </Form.Label>\r\n            <Form.Control\r\n              // value={content}\r\n              type=\"text\"\r\n              onChange={handleSettingContent}\r\n              ref={register({ required: true })}\r\n              name=\"labels\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"postKeywords\">\r\n            <Form.Label className=\"labels\">Any Keywords?</Form.Label>\r\n            {contentFilters.map((level, index) => {\r\n              return (\r\n                <Form.Label\r\n                  key={index}\r\n                  control={\r\n                    <Form.Check\r\n                      checked=\"false\"\r\n                      type=\"checkbox\"\r\n                      onChange={handleSettingContent}\r\n                      name={level}\r\n                      ref={register({ required: true })}\r\n                    />\r\n                  }\r\n                  label={level}\r\n                />\r\n              );\r\n            })}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"postRating\">\r\n            <Form.Label className=\"labels\">Rate it, 1 to 5 Stars.</Form.Label>\r\n            <br></br>\r\n            <StarRatingComponent\r\n              name=\"rating\"\r\n              editing={true}\r\n              renderStarIcon={() => <span>‚≠ê</span>}\r\n              starCount={5}\r\n              value={starRating}\r\n              ref={register}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"Attachment\">\r\n            <Form.Label className=\"labels\">Attach a related file</Form.Label>\r\n            <Form.Control\r\n              onChange={handleFileChange}\r\n              type=\"file\"\r\n              variant=\"secondary\"\r\n              ref={register}\r\n              name=\"file\"\r\n            />\r\n          </Form.Group>\r\n          <LoaderButton\r\n            block\r\n            type=\"submit\"\r\n            size=\"lg\"\r\n            variant=\"primary\"\r\n            isLoading={isLoading}\r\n            disabled={!validateForm()}\r\n          >\r\n            Share it\r\n          </LoaderButton>\r\n        </Form>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":15},{"ruleId":"74","severity":1,"message":"78","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":17},{"ruleId":"74","severity":1,"message":"79","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":14},{"ruleId":"74","severity":1,"message":"80","line":11,"column":10,"nodeType":"76","messageId":"77","endLine":11,"endColumn":13},{"ruleId":"74","severity":1,"message":"81","line":17,"column":9,"nodeType":"76","messageId":"77","endLine":17,"endColumn":16},{"ruleId":"74","severity":1,"message":"82","line":19,"column":21,"nodeType":"76","messageId":"77","endLine":19,"endColumn":33},{"ruleId":"74","severity":1,"message":"83","line":20,"column":22,"nodeType":"76","messageId":"77","endLine":20,"endColumn":35},{"ruleId":"74","severity":1,"message":"84","line":38,"column":12,"nodeType":"76","messageId":"77","endLine":38,"endColumn":23},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'NewPost' is defined but never used.","Identifier","unusedVar","'onError' is defined but never used.","'config' is defined but never used.","'API' is defined but never used.","'history' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'setStarRating' is assigned a value but never used.","'onStarClick' is defined but never used.","no-global-assign","no-unsafe-negation"]